<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.news.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.news.entity.User" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="uname" property="uname" jdbcType="VARCHAR" />
    <result column="pwd" property="pwd" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="bak1" property="bak1" jdbcType="INTEGER" />
    <result column="bak2" property="bak2" jdbcType="INTEGER" />
    <result column="bak3" property="bak3" jdbcType="VARCHAR" />
    <result column="bak4" property="bak4" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    uid, uname, pwd, tel, email, bak1, bak2, bak3, bak4
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.news.entity.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.news.entity.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.news.entity.User" >
    insert into user (uid, uname, pwd, 
      tel, email, bak1, bak2, 
      bak3, bak4)
    values (#{uid,jdbcType=INTEGER}, #{uname,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, 
      #{tel,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{bak1,jdbcType=INTEGER}, #{bak2,jdbcType=INTEGER}, 
      #{bak3,jdbcType=VARCHAR}, #{bak4,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.news.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="uname != null" >
        uname,
      </if>
      <if test="pwd != null" >
        pwd,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="bak1 != null" >
        bak1,
      </if>
      <if test="bak2 != null" >
        bak2,
      </if>
      <if test="bak3 != null" >
        bak3,
      </if>
      <if test="bak4 != null" >
        bak4,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="uname != null" >
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="bak1 != null" >
        #{bak1,jdbcType=INTEGER},
      </if>
      <if test="bak2 != null" >
        #{bak2,jdbcType=INTEGER},
      </if>
      <if test="bak3 != null" >
        #{bak3,jdbcType=VARCHAR},
      </if>
      <if test="bak4 != null" >
        #{bak4,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.news.entity.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.uname != null" >
        uname = #{record.uname,jdbcType=VARCHAR},
      </if>
      <if test="record.pwd != null" >
        pwd = #{record.pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=INTEGER},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.bak1 != null" >
        bak1 = #{record.bak1,jdbcType=INTEGER},
      </if>
      <if test="record.bak2 != null" >
        bak2 = #{record.bak2,jdbcType=INTEGER},
      </if>
      <if test="record.bak3 != null" >
        bak3 = #{record.bak3,jdbcType=VARCHAR},
      </if>
      <if test="record.bak4 != null" >
        bak4 = #{record.bak4,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set uid = #{record.uid,jdbcType=INTEGER},
      uname = #{record.uname,jdbcType=VARCHAR},
      pwd = #{record.pwd,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      bak1 = #{record.bak1,jdbcType=INTEGER},
      bak2 = #{record.bak2,jdbcType=INTEGER},
      bak3 = #{record.bak3,jdbcType=VARCHAR},
      bak4 = #{record.bak4,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.news.entity.User" >
    update user
    <set >
      <if test="uname != null" >
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="bak1 != null" >
        bak1 = #{bak1,jdbcType=INTEGER},
      </if>
      <if test="bak2 != null" >
        bak2 = #{bak2,jdbcType=INTEGER},
      </if>
      <if test="bak3 != null" >
        bak3 = #{bak3,jdbcType=VARCHAR},
      </if>
      <if test="bak4 != null" >
        bak4 = #{bak4,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.news.entity.User" >
    update user
    set uname = #{uname,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      bak1 = #{bak1,jdbcType=INTEGER},
      bak2 = #{bak2,jdbcType=INTEGER},
      bak3 = #{bak3,jdbcType=VARCHAR},
      bak4 = #{bak4,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
    <!-- 查询用户是否存在 -->
    <select id="findUser" parameterType="USER" resultMap="BaseResultMap">
  		select * from user where uname=#{uname} and pwd=#{pwd}
  </select>
  
  <!-- 查询用户 -->
	<select id="findAll" resultType="User">
		select * from user
	</select>
	<!--  删除用户 -->
	<delete id="removeUser" parameterType="java.lang.Integer">
		<!--  在建立表达的时候在外键上加入ON DELETE CASCADE 可以删除主表的数据  -->
		delete from user where uid = #{uid,jdbcType=INTEGER};
	
	</delete>
	
	<!-- 通过名字查询用户 -->
	<select id="findUserByName" resultType="User">
	   select * from user where  uname=#{name}
	</select>
	<!-- 通过id查询用户 -->
	<select id="findUserById" resultType="User">
	    select * from user where uid=#{uid}
	</select>
	<!-- 更新用户信息 -->
 	<update id="update" >
	   UPDATE USER SET uname=#{0},pwd = #{1},tel=#{2},email=#{3} WHERE uid=#{4}
	</update>
	<update id="updatePwd">
	  UPDATE USER SET pwd = #{1} WHERE uid=#{0}
	</update>
	
	<select id="findUserIsexist" resultType="User">
	   select * from user where  uname=#{0} and pwd=#{1}
	</select>
	
</mapper>